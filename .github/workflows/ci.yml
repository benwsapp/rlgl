name: Test

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00
        with:
          go-version-file: "go.mod"
      - name: Build binary
        run: go build -v ./...

  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00
        with:
          go-version-file: "go.mod"
      - name: Run unit tests with coverage
        run: go test -race -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Convert coverage to Cobertura format
        run: |
          go install github.com/boumenot/gocover-cobertura@latest
          gocover-cobertura < coverage.txt > coverage.xml
      - name: Upload coverage to Codacy
        uses: codacy/codacy-coverage-reporter-action@a38818475bb21847788496e9f0fddaa4e84955ba
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml

  codacy-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Run Codacy Analysis
        uses: codacy/codacy-analysis-cli-action@d28ce580f19309cd493628eba4641f745822082c
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          upload: true
          max-allowed-issues: 2147483647

  lint-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00
        with:
          go-version-file: "go.mod"
      - name: Install gocognit
        run: go install github.com/uudashr/gocognit/cmd/gocognit@latest
      - name: Run gocognit
        run: gocognit -d -over 10 .
      - name: golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9
        with:
          version: v2.5

  lint-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - uses: hadolint/hadolint-action@2332a7b74a6de0dda2e2221d575162eba76ba5e5
        with:
          dockerfile: Dockerfile

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435
      - name: Build multi-arch container
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t docker.io/benwsapp/rlgl:latest \
            .

  scan-docker:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Build container
        run: docker build -t docker.io/benwsapp/rlgl:latest .
      - name: Run Trivy
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        with:
          image-ref: 'docker.io/benwsapp/rlgl:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: false
          version: "latest"
          vuln-type: 'os,library'
          severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'
